#ifndef SPXOR_H
#define SPXOR_H

/// @file SpXor.h
/// @brief SpXor のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2016 Yusuke Matsunaga
/// All rights reserved.


#include "SpGate.h"


BEGIN_NAMESPACE_YM_SATPG_FSIM

//////////////////////////////////////////////////////////////////////
/// @class SpXor SpXor.h
/// @brief XORノード
//////////////////////////////////////////////////////////////////////
class SpXor :
  public SpGate
{
public:

  /// @brief コンストラクタ
  SpXor(const vector<SimPrim*>& fanins);

  /// @brief デストラクタ
  virtual
  ~SpXor();


public:
  //////////////////////////////////////////////////////////////////////
  // 2値版の故障シミュレーション用の仮想関数
  //////////////////////////////////////////////////////////////////////

  /// @brief 正常値の計算を行う．(2値版)
  virtual
  PackedVal
  _calc_val();

  /// @brief ゲートの入力から出力までの可観測性を計算する．(2値版)
  virtual
  PackedVal
  _calc_gobs(ymuint ipos);

};


//////////////////////////////////////////////////////////////////////
/// @class SnNor2 SpXor.h
/// @brief 2入力XORノード
//////////////////////////////////////////////////////////////////////
class SpXor2 :
  public SpGate2
{
public:

  /// @brief コンストラクタ
  SpXor2(const vector<SimPrim*>& fanins);

  /// @brief デストラクタ
  virtual
  ~SpXor2();


public:
  //////////////////////////////////////////////////////////////////////
  // 2値版の故障シミュレーション用の仮想関数
  //////////////////////////////////////////////////////////////////////

  /// @brief 正常値の計算を行う．(2値版)
  virtual
  PackedVal
  _calc_val();

  /// @brief ゲートの入力から出力までの可観測性を計算する．(2値版)
  virtual
  PackedVal
  _calc_gobs(ymuint ipos);

};


//////////////////////////////////////////////////////////////////////
/// @class SpXnor SpXor.h
/// @brief XNORノード
//////////////////////////////////////////////////////////////////////
class SpXnor :
  public SpXor
{
public:

  /// @brief コンストラクタ
  SpXnor(const vector<SimPrim*>& fanins);

  /// @brief デストラクタ
  virtual
  ~SpXnor();


public:
  //////////////////////////////////////////////////////////////////////
  // 2値版の故障シミュレーション用の仮想関数
  //////////////////////////////////////////////////////////////////////

  /// @brief 正常値の計算を行う．(2値版)
  virtual
  PackedVal
  _calc_val();

};


//////////////////////////////////////////////////////////////////////
/// @class SnNor2 SpXor.h
/// @brief 2入力XNORノード
//////////////////////////////////////////////////////////////////////
class SpXnor2 :
  public SpXor2
{
public:

  /// @brief コンストラクタ
  SpXnor2(const vector<SimPrim*>& fanins);

  /// @brief デストラクタ
  virtual
  ~SpXnor2();


public:
  //////////////////////////////////////////////////////////////////////
  // 2値版の故障シミュレーション用の仮想関数
  //////////////////////////////////////////////////////////////////////

  /// @brief 正常値の計算を行う．(2値版)
  virtual
  PackedVal
  _calc_val();

};

END_NAMESPACE_YM_SATPG_FSIM

#endif // SPXOR_H
